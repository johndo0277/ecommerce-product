name: CI/CD to AWS ECS

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Java
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"

      # Step 3: Build with Maven
      - name: Build with Maven
        run: mvn clean package -DskipTests

      # Step 4: Log in to Amazon ECR
      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        with:
          mask-password: true

      # Step 5: Build and push Docker image to ECR
      - name: Build and push Docker image
        run: |
          # Define variables
          IMAGE_NAME=ecommerce/product
          ECR_URI=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/$IMAGE_NAME

          # Debug ECR_URI
          echo "ECR_URI=$ECR_URI"

          # Build the Docker image
          docker build -t $IMAGE_NAME .

          # Tag the image for ECR
          docker tag $IMAGE_NAME:latest $ECR_URI:latest

          # Push the image to ECR
          docker push $ECR_URI:latest

      # Step 6: Deploy to ECS
      - name: Deploy to Amazon ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: product-task-def.json
          service: product-service
          cluster: ecommerce-cluster
          wait-for-service-stability: true
